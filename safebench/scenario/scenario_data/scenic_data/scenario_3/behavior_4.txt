''' The ego is changing lanes when a large vehicle in the target lane obstructs the view of potential hazards, forcing the ego to cautiously assess the situation before completing the lane change safely.
'''

param map = localPath('../maps/Town03.xodr') 
param carla_map = 'Town03'
model scenic.simulators.carla.model
EGO_MODEL = "vehicle.tesla.model3"

laneSecsWithRightLane = []
for lane in network.lanes:
    for laneSec in lane.sections:
        if laneSec._laneToRight is not None:
            if laneSec._laneToRight.isForward is laneSec.isForward:
                laneSecsWithRightLane.append(laneSec)

initLaneSec = Uniform(*laneSecsWithRightLane)

spawn = OrientedPoint in initLaneSec.centerline

ego = Car at spawn,
    with blueprint EGO_MODEL
    
spawn2 = OrientedPoint right of spawn by 4

leadDistance = Range(25, 45)
LeadingAgent = Car following roadDirection from spawn for Range(25, 45),
    with behavior FollowLaneBehavior(Range(2, 5))
    
AdvAgent = Car following roadDirection from spawn2 for (leadDistance + Range(10, 20))
    
require (distance to intersection) > 70
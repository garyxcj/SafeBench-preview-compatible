""" The ego is driving straight and a car in the adjacent lane suddenly merges into the ego's lane, causing the ego to have to brake suddenly to avoid a collision.
"""

param map = localPath('../maps/Town05.xodr') 
param carla_map = 'Town05'
model scenic.simulators.carla.model
EGO_MODEL = "vehicle.tesla.model3"

behavior AdvBehavior(SPEED, DISTANCE):
    laneChangeCompleted = False
    try:
        do FollowLaneBehavior(target_speed=SPEED)
    interrupt when withinDistanceToAnyCars(self, DISTANCE) and not laneChangeCompleted:
        current_laneSection = network.laneSectionAt(self)
        leftLaneSec = current_laneSection._laneToLeft
        do LaneChangeBehavior(
            laneSectionToSwitch=leftLaneSec,
            target_speed=SPEED)
        laneChangeCompleted = True

laneSecsWithRightLane = []
for lane in network.lanes:
    for laneSec in lane.sections:
        if laneSec._laneToRight is not None:
            if laneSec._laneToRight.isForward is laneSec.isForward:
                laneSecsWithRightLane.append(laneSec)

initLaneSec = Uniform(*laneSecsWithRightLane)

spawn = OrientedPoint in initLaneSec.centerline
ego = Car at spawn,
    with blueprint EGO_MODEL
    
spawn2 = OrientedPoint right of spawn by 4

AdvAgent = Car following roadDirection from spawn2 for Range(40, 60),
    with behavior AdvBehavior(Range(5, 8), Range(20, 30))
    
require (distance to intersection) > 80
